#ifndef Analysis_h 
#define Analysis_h
/*****************************************************************************
 * Copyright (C) 2009-2014    this file is part of the NPTool Project        *
 *                                                                           *
 * For the licensing terms see $NPTOOL/Licence/NPTool_Licence                *
 * For the list of contributors see $NPTOOL/Licence/Contributors             *
 *****************************************************************************/

/*****************************************************************************
 * Original Author: Adrien MATTA  contact address: a.matta@surrey.ac.uk      *
 *                                                                           *
 * Creation Date  : march 2015                                               *
 * Last update    : December 2016 [m.moukaddam@surrey.ac.uk]                 *
 *---------------------------------------------------------------------------*
 * Decription:                                                               *
 * Class describing the property of an Analysis object                       *
 *                                                                           *
 *---------------------------------------------------------------------------*
 * Comment:                                                                  *
 *                                                                           *
 *                                                                           *
 *****************************************************************************/
#include "NPVAnalysis.h"
#include "TTiaraHyballPhysics.h"
#include "TTiaraBarrelPhysics.h"
#include "TFPDTamuPhysics.h"
#include "TGeTAMUPhysics.h"
#include "TInitialConditions.h"
#include "NPEnergyLoss.h"
#include "NPReaction.h"
#include <TVector3.h>
#include <TRandom3.h>
#include <TMath.h>
#include <TObject.h>




class Analysis: public NPL::VAnalysis{
  public:
    Analysis();
    ~Analysis();

  public: 
    void Init();
    void TreatEvent();
    void End();
    void ReInitValue();
    void InitOutputBranch();
    void InitInputBranch();
    static NPL::VAnalysis* Construct();

  private:

  double Ex;
  double ELab;
  double ThetaLab;
  double ThetaCM;
  double TiaraIMX;
  double TiaraIMY;
  double TiaraIMZ;
  TInitialConditions* Initial;
  NPL::Reaction* myReaction;
 
  //	Energy loss table: the G4Table are generated by the simulation
  NPL::EnergyLoss LightTarget;
  NPL::EnergyLoss LightAl ;
  NPL::EnergyLoss LightSi; 
  NPL::EnergyLoss BeamTarget ; 

  double OriginalBeamEnergy;
  double FinalBeamEnergy;

  TTiaraHyballPhysics* TH;
  TTiaraBarrelPhysics* TB;  
  TFPDTamuPhysics* TF;
  TGeTAMUPhysics* TG;

  TRandom *Rand ;
	double ThetaNormalTarget  ;
	double ThetaTHSurface ;
	double ThetaTBSurface ;
	double Si_E_TH  ;
	double Si_E_InnerTB;
	double Si_E_OuterTB;
	double Si_E_TB  ;
	double Energy ;
	double TargetThickness ;

	double Original_ThetaLab;
	double Original_ELab;

	double XTarget ;
	double YTarget ;
	TVector3 BeamDirection ;
  
  //FPD
  double Delta_E      ;
  double Micro_E_row1 ;   
  double Micro_E_col4 ; 
  double Micro_E      ;  
  double Plast_E      ;
  double Theta_aw     ;
  double XPlastic_aw  ;
  double XPlastic     ;

  //TAC
  double TacSiGeOR ;
  double TacSiMicroOR ;
	double TacSiPlast1 ;
	double TacSiPlast2 ;
};
#endif
